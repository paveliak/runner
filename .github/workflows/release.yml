name: Runner CD

on:
  workflow_dispatch:
  push:
    paths:
    - releaseVersion

jobs:
  build:
    outputs:
      linux-x64-sha: ${{ steps.sha.outputs.linux-x64-sha256 }}
      linux-arm64-sha: ${{ steps.sha.outputs.linux-arm64-sha256 }}
      linux-arm-sha: ${{ steps.sha.outputs.linux-arm-sha256 }}
      win-x64-sha: ${{ steps.sha.outputs.win-x64-sha256 }}
      win-arm64-sha: ${{ steps.sha.outputs.win-arm64-sha256 }}
      osx-x64-sha: ${{ steps.sha.outputs.osx-x64-sha256 }}
      osx-arm64-sha: ${{ steps.sha.outputs.osx-arm64-sha256 }}
    strategy:
      matrix:
        runtime: [ linux-x64, linux-arm64, linux-arm, win-x64, osx-x64, osx-arm64, win-arm64 ]
        include:
        - runtime: linux-x64
          os: ubuntu-latest
          devScript: ./dev.sh

        - runtime: linux-arm64
          os: ubuntu-latest
          devScript: ./dev.sh

        - runtime: linux-arm
          os: ubuntu-latest
          devScript: ./dev.sh

        - runtime: osx-x64
          os: macOS-latest
          devScript: ./dev.sh

        - runtime: osx-arm64
          os: macOS-latest
          devScript: ./dev.sh

        - runtime: win-x64
          os: windows-2019
          devScript: ./dev

        - runtime: win-arm64
          os: windows-latest
          devScript: ./dev

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4

    # Build runner layout
    - name: Build & Layout Release
      run: |
        ${{ matrix.devScript }} layout Release ${{ matrix.runtime }}
      working-directory: src

    # Create runner package tar.gz/zip
    - name: Package Release
      if: github.event_name != 'pull_request'
      run: |
        ${{ matrix.devScript }} package Release ${{ matrix.runtime }}
      working-directory: src

    # compute shas and set as job outputs to use in release notes
    - run: brew install coreutils #needed for shasum util
      if: ${{ matrix.os == 'macOS-latest' }}
      name: Install Dependencies for SHA Calculation (osx)
    - run: |
        file=$(ls)
        sha=$(sha256sum $file | awk '{ print $1 }')
        echo "Computed sha256: $sha for $file"
        echo "${{matrix.runtime}}-sha256=$sha" >> $GITHUB_OUTPUT
      shell: bash
      id: sha
      name: Compute SHA256
      working-directory: _package

    # Upload runner package tar.gz/zip as artifact.
    - name: Publish Artifact
      if: github.event_name != 'pull_request'
      uses: actions/upload-artifact@v4
      with:
        name: runner-packages-${{ matrix.runtime }}
        path: |
          _package

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v4

    # Download runner package tar.gz/zip produced by 'build' job
    - name: Download Artifact (win-x64)
      uses: actions/download-artifact@v4
      with:
        name: runner-packages-win-x64
        path: ./
    - name: Download Artifact (win-arm64)
      uses: actions/download-artifact@v4
      with:
        name: runner-packages-win-arm64
        path: ./
    - name: Download Artifact (osx-x64)
      uses: actions/download-artifact@v4
      with:
        name: runner-packages-osx-x64
        path: ./
    - name: Download Artifact (osx-arm64)
      uses: actions/download-artifact@v4
      with:
        name: runner-packages-osx-arm64
        path: ./
    - name: Download Artifact (linux-x64)
      uses: actions/download-artifact@v4
      with:
        name: runner-packages-linux-x64
        path: ./
    - name: Download Artifact (linux-arm)
      uses: actions/download-artifact@v4
      with:
        name: runner-packages-linux-arm
        path: ./
    - name: Download Artifact (linux-arm64)
      uses: actions/download-artifact@v4
      with:
        name: runner-packages-linux-arm64
        path: ./

  publish-image:
    needs: release
    uses: ./.github/workflows/publish-image.yml
    secrets: inherit
